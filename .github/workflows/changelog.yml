name: Auto Changelog

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  generate_changelog:
    runs-on: ubuntu-latest

    steps:
      # Repository auschecken, inklusive aller Branch-Referenzen
      - name: Checkout repository with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Überprüfe die Verfügbarkeit des Basis-Branches
      - name: Fetch base branch
        run: |
          echo "Base branch: ${{ github.base_ref }}"
          git fetch origin ${{ github.base_ref }}
          git checkout ${{ github.base_ref }}

      # Commits mit `#` filtern
      - name: Get commits with `#`
        id: get_commits
        run: |
          # Hole die Commits im Pull Request (vom base Branch bis zum aktuellen Branch)
          echo "Fetching commits between origin/${{ github.base_ref }} and HEAD"
          COMMITS=$(git log origin/${{ github.base_ref }}..HEAD --oneline)
          echo "Commits found:"
          echo "$COMMITS"

          # Filtere Commits, die mit `#` beginnen
          CHANGES=$(echo "$COMMITS" | grep '^#' || true)
          echo "Filtered commits with '#':"
          echo "$CHANGES"

          # Falls keine Commits gefunden werden, beende den Prozess
          if [ -z "$CHANGES" ]; then
            echo "No commits with '#' found."
            exit 0
          fi

          # Speichern der gefilterten Commits als Umgebungsvariable
          echo "CHANGES='$CHANGES'" >> $GITHUB_ENV

      # Überprüfe den Inhalt der Umgebungsvariable 'changes'
      - name: Debug - Check changes environment variable
        run: |
          echo "Debugging - Checking filtered commits:"
          echo "${{ env.CHANGES }}"

      # Falls CHANGELOG.md nicht existiert, erstelle die Datei
      - name: Create CHANGELOG.md if it does not exist
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "Creating CHANGELOG.md"
            echo "# Changelog" > CHANGELOG.md
          fi
          cat CHANGELOG.md

      # Füge neue Änderungen zur CHANGELOG.md hinzu
      - name: Update CHANGELOG.md with new changes
        run: |
          echo "Appending new changes to CHANGELOG.md"
          echo "${{ env.CHANGES }}" >> CHANGELOG.md
          echo "Updated CHANGELOG.md:"
          cat CHANGELOG.md

      # Änderungen an CHANGELOG.md commiten und pushen
      - name: Commit changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md with new changes"
          git push
