name: Generate Changelog for Pull Request

on:
  pull_request:
    branches: [ master ]  # Workflow wird nur für PRs auf den 'master' Branch ausgeführt
    types: [opened, synchronize]

jobs:
  generate_changelog:
    runs-on: ubuntu-latest
    name: Generate Changelog for PR Commits

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Holt das gesamte Repository mit allen Branches

    - name: Set Git User Info
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"

    - name: Generate Changelog Entry
      run: |
        # Datum einmal im Format DD.MM.YYYY setzen
        DATE=$(date +"%d.%m.%Y")
        
        # Leere Datei erstellen (falls sie nicht existiert)
        if [ ! -f CHANGELOG.md ]; then
          touch CHANGELOG.md
        fi
        
        # Alle gefilterten Commits mit # sammeln (die mit # beginnen, ohne Merge-Commits)
        COMMITS=$(git log $(git merge-base origin/master HEAD)..HEAD --pretty=format:"%s" --no-merges | grep "^#")

        # Überprüfen, ob es gefilterte Commits gibt
        if [ -z "$COMMITS" ]; then
          echo "No filtered commits found, skipping changelog update."
          exit 0
        fi

        # Datum und die gefilterten Commits in die CHANGELOG.md einfügen
        # Die Datei wird nicht überschrieben, sondern mit neuen Daten ergänzt
        echo "" >> CHANGELOG.md
        echo "$DATE" >> CHANGELOG.md  # Datum einmalig hinzufügen
        echo "$COMMITS" >> CHANGELOG.md  # Die gefilterten Commits hinzufügen
        echo "" >> CHANGELOG.md

        # Änderungen in der CHANGELOG.md-Datei zum Commit hinzufügen
        git pull origin master  # Holt die neuesten Änderungen vom Remote-Branch
        git add CHANGELOG.md
        git commit -m "Update changelog for PR #${{ github.event.pull_request.number }}" || echo "No changes to commit"
        git push origin HEAD:${{ github.head_ref }}

    - name: Comment on Pull Request with Changelog
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        header: changelog
        message: |
          ## Changelog
          ```markdown
          ${{ env.changelog_content }}
          ```
