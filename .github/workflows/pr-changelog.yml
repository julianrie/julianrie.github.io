name: Generate Changelog for Pull Request

on:
  pull_request:
    branches: [ master ]  # Workflow auf master Branch
    types: [opened, synchronize]  # Workflow bei PR-Öffnen oder Synchronisation

jobs:
  generate_changelog:
    runs-on: ubuntu-latest  
    name: Generate Changelog for PR Commits  

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4  # GitHub-Checkout-Action
      with:
        fetch-depth: 0  # Komplettes Repository mit allen Branches auschecken

    - name: Generate Changelog Entry
      run: |
        # Aktuelles Datum erfassen
        DATE=$(date +"%d.%m.%Y")

        # Temporäre Datei erstellen/leeren
        echo "$DATE" > new_changelog.md
        echo "" >> new_changelog.md

        # Commit-Messages mit Extended Description holen und formatieren
        git log $(git merge-base origin/master HEAD)..HEAD --pretty=format:"%s%n%b" --no-merges | awk '
          BEGIN { in_commit = 0 }
          /^#/ { 
            if (in_commit) { print ""; in_commit = 0 }
            print $0; 
            in_commit = 1 
          }
          /^[^#]/ && in_commit { print "    " $0 }
        ' >> new_changelog.md

        echo "" >> new_changelog.md

        # Wenn CHANGELOG.md existiert, Inhalte zusammenführen
        if test -f CHANGELOG.md; then
          if ! grep -q "^$DATE" CHANGELOG.md; then
            cat CHANGELOG.md >> new_changelog.md
          else
            tail -n +2 CHANGELOG.md >> new_changelog.md
          fi
        fi

        # Temporäre Datei in CHANGELOG.md umbenennen
        mv new_changelog.md CHANGELOG.md  

    - name: Commit and Push Changelog
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub-Konfiguration
      run: |
        git config --global user.name "GitHub Actions Bot"  
        git config --global user.email "actions@github.com"  
        git add CHANGELOG.md  
        git commit -m "Update changelog for PR #${{ github.event.pull_request.number }}" || echo "No changes to commit"
        git push origin HEAD:${{ github.head_ref }}  # Änderungen in den PR-Branch pushen

    - name: Comment on Pull Request with Changelog
      uses: marocchino/sticky-pull-request-comment@v2  # GitHub Action für Kommentare
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # Access Token für Kommentar-Action
        header: changelog 
        message: |
          ## Changelog
          ```markdown
          ${{ env.changelog_content }}  # Changelog-Inhalt als Kommentar einfügen
          ```
