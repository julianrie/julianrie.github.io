name: Generate JSON Changelog for Pull Request

on:
  pull_request:
    branches: [ master ]
    types: [opened, synchronize]

jobs:
  generate_changelog:
    runs-on: ubuntu-latest
    name: Generate JSON Changelog for PR Commits

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate JSON Changelog Entry
      run: |
        # Aktuelles Datum im Format DD.MM.YYYY
        DATE=$(date +"%d.%m.%Y")
        
        # Beginne JSON-Datei mit Datum und Commits-Array
        echo "{ \"date\": \"$DATE\", \"commits\": [" > new_changelog.json

        # Holen und Filtern der Commits, die mit # beginnen
        COMMIT_MESSAGES=$(git log $(git merge-base origin/master HEAD)..HEAD --pretty=format:"%s" --no-merges | grep "^#")

        # Überprüfen, ob Commits gefunden wurden, und JSON erstellen
        if [ -n "$COMMIT_MESSAGES" ]; then
          echo "$COMMIT_MESSAGES" | sed 's/^/# /; s/.*/{ \"message\": \"&\" },/' >> new_changelog.json
          sed -i '$ s/,$//' new_changelog.json  # Entfernt das letzte Komma
        fi

        # Schließen des JSON-Arrays
        echo "]}" >> new_changelog.json

        # Mergen mit bestehender CHANGELOG.json, falls vorhanden
        if test -f CHANGELOG.json; then
          jq -s '.[0] * .[1]' new_changelog.json CHANGELOG.json > merged_changelog.json
          mv merged_changelog.json CHANGELOG.json
        else
          mv new_changelog.json CHANGELOG.json
        fi

    - name: Commit and Push JSON Changelog
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        git add CHANGELOG.json
        git commit -m "Update JSON changelog for PR #${{ github.event.pull_request.number }}" || echo "No changes to commit"
        git push origin HEAD:${{ github.head_ref }}

    - name: Comment on Pull Request with JSON Changelog
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        header: changelog
        message: |
          ## JSON Changelog
          ```json
          ${{ env.changelog_content }}
          ```
